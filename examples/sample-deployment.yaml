---
# Sample Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-web-app
  namespace: default
  labels:
    app: sample-web-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample-web-app
  template:
    metadata:
      labels:
        app: sample-web-app
    spec:
      containers:
      - name: web
        image: nginx:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Service for the Application
apiVersion: v1
kind: Service
metadata:
  name: sample-web-app-service
  namespace: default
  labels:
    app: sample-web-app
spec:
  selector:
    app: sample-web-app
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP

---
# Ingress with HydraRoute enabled
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-web-app-ingress
  namespace: default
  annotations:
    # Enable nginx ingress controller
    kubernetes.io/ingress.class: nginx
    
    # Enable HydraRoute intelligent scaling
    hydra-route.ai/enabled: "true"
    
    # Override global scaling limits for this specific ingress
    hydra-route.ai/min-replicas: "2"
    hydra-route.ai/max-replicas: "50"
    
    # Optional: specify target service if different from backend
    # hydra-route.ai/target: "sample-web-app-service"
    
    # Optional nginx annotations for additional metrics
    nginx.ingress.kubernetes.io/enable-real-ip: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
      }
spec:
  rules:
  - host: sample-app.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sample-web-app-service
            port:
              number: 80

---
# Optional: HorizontalPodAutoscaler (HydraRoute will work alongside this)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sample-web-app-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sample-web-app
  minReplicas: 2
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max 